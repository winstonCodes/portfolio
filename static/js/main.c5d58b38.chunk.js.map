{"version":3,"sources":["components/NavBar/index.js","components/NavBar/NavBar.js","components/Footer/index.js","components/Footer/Footer.js","pages/LandingPage/index.js","pages/LandingPage/LandingPage.js","pages/AboutPage/index.js","pages/AboutPage/AboutPage.js","pages/BlogPage/index.js","pages/BlogPage/BlogPage.js","pages/ContactPage/index.js","pages/ContactPage/ContactPage.js","pages/PortfolioPage/index.js","pages/PortfolioPage/PortfolioPage.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","react_default","a","createElement","NavLink","to","className","Footer","href","LandingPage","AboutPage","BlogPage","ContactPage","PortfolioPage","App","BrowserRouter","components_NavBar","Switch","Route","exact","component","path","components_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+XAEeA,SCEA,SAAAC,GAAK,OAClBC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,GAAG,IAAIC,UAAU,aAA1B,iBACJL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACbL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,GAAG,SAASC,UAAU,cAA/B,UACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,GAAG,aAAaC,UAAU,kBAAnC,cACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,GAAG,QAAQC,UAAU,aAA9B,SACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,GAAG,WAAWC,UAAU,gBAAjC,iBCVGC,SCCA,SAAAP,GAAK,OAClBC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,+BAAsBF,EAAAC,EAAAC,cAAA,KAAGK,KAAK,wBAAR,YAAtB,KACAP,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGK,KAAK,sBAAqBP,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kCAC9CL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGK,KAAK,uBAAsBP,EAAAC,EAAAC,cAAA,KAAGG,UAAU,mCAC/CL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGK,KAAK,uBAAsBP,EAAAC,EAAAC,cAAA,KAAGG,UAAU,+DCTtCG,eCCK,SAAAT,GAAK,OACvBC,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,WAASG,UAAU,QACjBL,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,8DCNSO,SCCG,SAAAV,GAAK,OACrBC,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,WAASG,UAAU,QACjBL,EAAAC,EAAAC,cAAA,4BCLSQ,SCCE,SAAAX,GAAK,OACpBC,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,WAASG,UAAU,QACjBL,EAAAC,EAAAC,cAAA,2BCLSS,SCCK,SAAAZ,GAAK,OACvBC,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,WAASG,UAAU,QACjBL,EAAAC,EAAAC,cAAA,8BCLSU,SCCO,SAAAb,GAAK,OACzBC,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,WAASG,UAAU,QACjBL,EAAAC,EAAAC,cAAA,gCC4BSW,mLApBX,OACEb,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACEd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACa,EAAD,MACAf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,OAAK,EAACC,UAAWX,EAAaY,KAAK,MAC1CpB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,OAAK,EAACC,UAAWV,EAAWW,KAAK,WACxCpB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,OAAK,EAACC,UAAWT,EAAUU,KAAK,UACvCpB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,OAAK,EAACC,UAAWR,EAAaS,KAAK,aAC1CpB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,OAAK,EAACC,UAAWP,EAAeQ,KAAK,gBAE9CpB,EAAAC,EAAAC,cAACmB,EAAD,gBAdMC,aCDEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c5d58b38.chunk.js","sourcesContent":["import NavBar from './NavBar.js';\n\nexport default NavBar;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './style.css';\n\nconst NavBar = props => (\n  <div>\n    <header>\n      <h2><NavLink to=\"/\" className=\"home grow\">winstonCodes</NavLink></h2>\n      <nav className=\"nav-container\">\n        <li><NavLink to=\"/about\" className=\"about grow\">About</NavLink></li>\n        <li><NavLink to=\"/portfolio\" className=\"portfolio grow\">Portfolio</NavLink></li>\n        <li><NavLink to=\"/blog\" className=\"blog grow\">Blog</NavLink></li>\n        <li><NavLink to=\"/contact\" className=\"contact grow\">Contact</NavLink></li>\n      </nav>\n    </header>\n  </div>\n);\n\nexport default NavBar;\n","import Footer from './Footer.js';\n\nexport default Footer;\n","import React from 'react';\nimport './style.css';\n\nconst Footer = props => (\n  <footer>\n    <p>Images courtesy of <a href=\"http://unsplash.com/\">unsplash</a>.</p>\n    <p>Under construction</p>\n    <p></p>\n    <ul>\n      <li><a href=\"http://twitter.com\"><i className=\"fab fa-twitter-square fa-2x\"></i></a></li>\n      <li><a href=\"http://facebook.com\"><i className=\"fab fa-facebook-square fa-2x\"></i></a></li>\n      <li><a href=\"http://snapchat.com\"><i className=\"fab fa-snapchat-square fa-2x\"></i></a></li>\n    </ul>\n  </footer>\n);\n\nexport default Footer;\n","import LandingPage from './LandingPage';\n\nexport default LandingPage;\n","import React from 'react';\nimport './style.css';\n\nconst LandingPage = props => (\n  <div>\n\n    <section className=\"hero\">\n      <h1>Hi, I'm Winston</h1>\n      <h3>Javascript Programmer | ReactJS | Vanilla JS</h3>\n    </section>\n\n\n  </div>\n);\n\nexport default LandingPage;\n\n// <section class=\"about\">\n//   <div class=\"about-text\">\n//     <ul class=\"about-text\">\n//       <li>I didn't ask for a completely reasonable excuse! I asked you to get busy!</li>\n//       <li>No! The kind with looting and maybe starting a few fires!</li>\n//       <li>Eeeee! Now say \"nuclear wessels\"! Yeah. Give a little credit to our public schools. Bender, this is Fry's decisionâ€¦ and he made it wrong. So it's time for us to interfere in his life. </li>\n//       <li>I had more, but you go ahead. Ah, computer dating. It's like pimping, but you rarely have to use the phrase \"upside your head.\" Why am I sticky and naked? Did I miss something fun? Spare me your space age technobabble, Attila the Hun!</li>\n//     </ul>\n//   </div>\n//   <div class=\"about-img\">\n//     <img src=\"assets/images/me-temp.JPG\" alt=\"\" class=\"self\" />\n//   </div>\n// </section>\n","import AboutPage from './AboutPage';\n\nexport default AboutPage;\n","import React from 'react';\nimport './style.css';\n\nconst AboutPage = props => (\n  <div>\n\n    <section className=\"hero\">\n      <h1>About Page</h1>\n    </section>\n\n\n  </div>\n);\n\nexport default AboutPage;\n","import BlogPage from './BlogPage';\n\nexport default BlogPage;\n","import React from 'react';\nimport './style.css';\n\nconst BlogPage = props => (\n  <div>\n\n    <section className=\"hero\">\n      <h1>Blog Page</h1>\n    </section>\n\n\n  </div>\n);\n\nexport default BlogPage;\n","import ContactPage from './ContactPage';\n\nexport default ContactPage;\n","import React from 'react';\nimport './style.css';\n\nconst ContactPage = props => (\n  <div>\n\n    <section className=\"hero\">\n      <h1>Contact Page</h1>\n    </section>\n\n\n  </div>\n);\n\nexport default ContactPage;\n","import PortfolioPage from './PortfolioPage';\n\nexport default PortfolioPage;\n","import React from 'react';\nimport './style.css';\n\nconst PortfolioPage = props => (\n  <div>\n\n    <section className=\"hero\">\n      <h1>Portfolio Page</h1>\n    </section>\n\n\n  </div>\n);\n\nexport default PortfolioPage;\n","import React, { Component } from 'react';\nimport NavBar from './components/NavBar';\nimport Footer from './components/Footer';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.css';\n\nimport LandingPage from './pages/LandingPage';\nimport AboutPage from './pages/AboutPage';\nimport BlogPage from './pages/BlogPage';\nimport ContactPage from './pages/ContactPage';\nimport PortfolioPage from './pages/PortfolioPage';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <div>\n            <NavBar />\n            <Switch>\n              <Route exact component={LandingPage} path=\"/\" />\n              <Route exact component={AboutPage} path=\"/about\" />\n              <Route exact component={BlogPage} path=\"/blog\" />\n              <Route exact component={ContactPage} path=\"/contact\" />\n              <Route exact component={PortfolioPage} path=\"/portfolio\" />\n            </Switch>\n            <Footer />\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}